/**
 * Generated by orval 🍺
 * Do not edit manually.
 * Static Files Fetcher
 * Environment configuration for endpoints

 */
import { HttpResponse, delay, http } from 'msw'

import type { Config } from '../../models'

export const getGetConfigResponseMock = (): Config => ({
  host: { ENV_TYPE: 'dev' },
  server: { API_URL: 'https://develop.screengeometry.pages.dev/' },
  google_analytics: { GA_TRACKING_ID: 'G-111111111' },
})

export const getGetConfigMockHandler = (
  overrideResponse?: Config | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Config> | Config)
) => {
  return http.get('*/env/config.json', async (info) => {
    await delay(10)

    return new HttpResponse(
      JSON.stringify(
        overrideResponse !== undefined
          ? typeof overrideResponse === 'function'
            ? await overrideResponse(info)
            : overrideResponse
          : getGetConfigResponseMock()
      ),
      { status: 200, headers: { 'Content-Type': 'application/json' } }
    )
  })
}
export const getConfigurationMock = () => [getGetConfigMockHandler()]

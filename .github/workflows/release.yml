# Simple workflow for deploying static content to GitHub Pages
name: Release

on:
  # Runs on pushes targeting the default branch
  push:
    branches: 
      - 'main'

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'release'
  cancel-in-progress: false

jobs:
  validate_build:
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/validation.yml

  version_management:
    name: Bump Version Automation
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: [validate_build]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: 'Run cat package.json'
        run: cat ./package.json

      - name:  'Version Bump'
        id: version-bump
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag-prefix: 'v'
          target-branch: 'main'
          commit-message: 'CI: bumps version to {{version}}'
          minor-wording:  'feat,minor'
          major-wording:  'break,major'
          patch-wording:  'fix,patch'    

      - name: 'cat package.json'
        run: cat ./package.json

      - name: 'Output Step'
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

  deploy_app:
    name: Deploy Production Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
      deployments: write
    needs: [version_management]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Run pnpm install
        run: pnpm install
      
      - name: Run pnpm build:prod
        run: pnpm build:prod

      - name: Deploy production App to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: screengeometry
          branch: main
          directory: ./dist
          wranglerVersion: '3'
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      
name: "E2E Test Task"

on: workflow_call

jobs:
  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: 🏗 Get Playwright version
        working-directory: ./apps/web
        shell: bash
        run: |
          PLAYWRIGHT_VERSION=$(npm ls --json @playwright/test | jq --raw-output '.dependencies["@playwright/test"].version') echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: 🧰 Cache Playwright
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: "~/.cache/ms-playwright"
          key: "playwright-browsers-${{ github.head_ref }}-${{ env.PLAYWRIGHT_VERSION }}"
          # key: "${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}"
          restore-keys: playwright-browsers-${{ github.head_ref }}-
          # restore-keys: ${{ runner.os }}-playwright-

      - name: 🏗 Install Playwright browsers
        shell: bash
        working-directory: ./apps/web
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm e2e:install

      - name: 🏗 Install Playwright OS dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        working-directory: ./apps/web
        run: pnpm e2e:install:deps

      - name: 🚀 Run Playwright tests
        working-directory: ./apps/web
        run: pnpm e2e

# Simple workflow for deploying static content to GitHub Pages
name: CD

on:
  # can be used to roll back to a previous release
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release"
        required: true
        default: "v1.0.0"
  # Auto deploy on new release from release please PR
  release:
    types: [published]

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "deploy_production"
  cancel-in-progress: false

jobs:
  deploy-app:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      pages: write
      id-token: write
      deployments: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run pnpm build:prod
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          GA_TRACKING_ID: ${{ vars.GA_TRACKING_ID }}
        run: pnpm build:prod

      - name: List build files
        run: |
          ls -laR apps/web/dist/

      - name: Create env folder
        run: |
          mkdir -p apps/web/dist/env

      - name: Create config.json
        id: env-create-json
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "config.json"
          json: '{"ENV_TYPE":"${{ vars.ENV_TYPE }}", "SERVER_API_URL":"${{ vars.SERVER_API_URL }}", "GA_TRACKING_ID":"${{ vars.GA_TRACKING_ID }}"}'
          dir: "apps/web/dist/env/"

      - name: Show config.json
        run: |
          cat apps/web/dist/env/config.json

      - name: Deploy App
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: apps/web
          packageManager: pnpm
          wranglerVersion: latest
          command: pages deploy dist --project-name=screengeometry --branch=main
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Print Deployment URL
        env:
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment-url }}
          DEPLOYMENT_ALIAS_URL: ${{ steps.deploy.outputs.pages-deployment-alias-url }}
        run: |
          echo $DEPLOYMENT_URL
          echo $DEPLOYMENT_ALIAS_URL

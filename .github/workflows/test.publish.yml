# Simple workflow for deploying static content to GitHub Pages
name: Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - 'develop'

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'deploy'
  cancel-in-progress: false

jobs:
  validate_build:
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/validation.yml

  publish:
    name: Manage Release
    needs:
      - validate_build
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      pull-requests: write
      packages: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }} // controls promotion flow in subsequent steps
    steps:
      - name: Calculate repo short name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: ${{ env.REPO_NAME }}




  development:
    name: Development
    needs:
      - build
    uses: ./.github/workflows/deployment.yaml // your deploy flow
    with:
      environment: development
    secrets: inherit

  staging:
    name: Staging
    needs:
      - publish // only allow promotion if release
    uses: ./.github/workflows/deployment.yaml // your deploy flow
    if: needs.publish.outputs.release_created 
    with:
      environment: staging
    secrets: inherit

  production:
    name: Production
    needs:
      - staging // only allow promotion to prod if staging release happened in same flow
      - publish // only allow promotion if release
    uses: ./.github/workflows/deployment.yaml // your deploy flow
    with:
      environment: production
    secrets: inherit
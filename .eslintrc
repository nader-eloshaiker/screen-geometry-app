{
    "env": {
        "browser": true,
        "es2021": true,
        "jest": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended",
        "plugin:tailwindcss/recommended"
    ],
    "settings": {
        "import/resolver": {
            "typescript": {}
        },
        "react": {
        "createClass": "createReactClass", // Regex for Component Factory to use,
                                            // default to "createReactClass"
        "pragma": "React",  // Pragma to use, default to "React"
        "fragment": "Fragment",  // Fragment to use (may be a property of <pragma>), default to "Fragment"
        "version": "detect", // React version. "detect" automatically picks the version you have installed.
                            // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                            // It will default to "latest" and warn if missing, and to "detect" in the future
        "flowVersion": "0.53" // Flow version
        }
    },
    "globals": {
        "window": true,
        "module": true
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": ["react", "react-hooks", "@typescript-eslint", "prettier", "react-refresh", "tailwindcss"],
    "ignorePatterns": ["vite-env.d.ts", "src/generated/**/*"],
    "rules": {
        "prettier/prettier": ["error", { "semi": false, "endOfLine":"auto" }],
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": "off",
        "react/react-in-jsx-scope": "off",
        "camelcase": "error",
        "spaced-comment": "error",
        "quotes": ["error", "single"],
        "no-duplicate-imports": "error",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
            }
        ],
        "react-refresh/only-export-components": [
            "warn",
            { "allowConstantExport": true }
        ]
    }
}
/** @type {import('tailwindcss').Config} */
import daisyui from 'daisyui'
import defaultTheme from 'tailwindcss/defaultTheme'

export default {
  mode: 'jit',
  content: ['./src/index.html', './src/**/*.{js,ts,jsx,tsx,html}'],
  theme: {
    colors: {
      ...defaultTheme.colors,
      lightPrimary: 'rgb(from #0096d6 r g b / <alpha-value>)',
      lightLightContent: 'rgb(from #d6f3ff r g b / <alpha-value>)',
      LightSecondary: 'rgb(from #9933B3 r g b / <alpha-value>)',
      lightSecondaryContent: 'rgb(from #FFE5FF r g b / <alpha-value>)',
      lightAccent: 'rgb(from #7FD8FF r g b / <alpha-value>)',
      lightAccentContent: 'rgb(from #005980 r g b / <alpha-value>)',
      darkPrimary: 'rgb(from #7FD8FF r g b / <alpha-value>)',
      darkPrimaryContent: 'rgb(from #005980 r g b / <alpha-value>)',
      darkSecondary: 'rgb(from #CC66E6 r g b / <alpha-value>)',
      darkSecondaryContent: 'rgb(from #660080 r g b / <alpha-value>)',
      darkAccent: 'rgb(from #1A739A r g b / <alpha-value>)',
      darkAccentContent: 'rgb(from #E5FFFF r g b / <alpha-value>)',
    },
    extend: {
      screens: {
        xs: '425px',
        '2xs': '375px',
        '3xs': '320px',
        ...defaultTheme.screens,
        '3xl': '1600px',
      },
      borderRadius: {
        lg: 'var(--radius)',
        md: 'calc(var(--radius) - 2px)',
        sm: 'calc(var(--radius) - 4px)',
      },
      colors: {
        background: 'hsl(var(--background) / <alpha-value>)',
        foreground: 'hsl(var(--foreground) / <alpha-value>)',
        card: {
          DEFAULT: 'hsl(var(--card) / <alpha-value>)',
          foreground: 'hsl(var(--card-foreground) / <alpha-value>)',
        },
        popover: {
          DEFAULT: 'hsl(var(--popover) / <alpha-value>)',
          foreground: 'hsl(var(--popover-foreground) / <alpha-value>)',
        },
        primary: {
          DEFAULT: 'hsl(var(--primary) / <alpha-value>)',
          hover: 'hsl(var(--primary-hover) / <alpha-value>)',
          focus: 'hsl(var(--primary-focus) / <alpha-value>)',
          active: 'hsl(var(--primary-active) / <alpha-value>)',
          foreground: 'hsl(var(--primary-foreground) / <alpha-value>)',
          'foreground-hover': 'hsl(var(--primary-foreground-hover) / <alpha-value>)',
          'foreground-focus': 'hsl(var(--primary-foreground-focus) / <alpha-value>)',
          'foreground-active': 'hsl(var(--primary-foreground-active) / <alpha-value>)',
        },
        secondary: {
          DEFAULT: 'hsl(var(--secondary) / <alpha-value>)',
          hover: 'hsl(var(--secondary-hover) / <alpha-value>)',
          focus: 'hsl(var(--secondary-focus) / <alpha-value>)',
          active: 'hsl(var(--secondary-active) / <alpha-value>)',
          foreground: 'hsl(var(--secondary-foreground) / <alpha-value>)',
          'foreground-hover': 'hsl(var(--secondary-foreground-hover) / <alpha-value>)',
          'foreground-focus': 'hsl(var(--secondary-foreground-focus) / <alpha-value>)',
          'foreground-active': 'hsl(var(--secondary-foreground-active) / <alpha-value>)',
        },
        muted: {
          DEFAULT: 'hsl(var(--muted) / <alpha-value>)',
          foreground: 'hsl(var(--muted-foreground) / <alpha-value>)',
        },
        destructive: {
          DEFAULT: 'hsl(var(--destructive) / <alpha-value>)',
          hover: 'hsl(var(--destructive-hover) / <alpha-value>)',
          focus: 'hsl(var(--destructive-focus) / <alpha-value>)',
          active: 'hsl(var(--destructive-active) / <alpha-value>)',
          foreground: 'hsl(var(--destructive-foreground) / <alpha-value>)',
          'foreground-hover': 'hsl(var(--destructive-foreground-hover) / <alpha-value>)',
          'foreground-focus': 'hsl(var(--destructive-foreground-focus) / <alpha-value>)',
          'foreground-active': 'hsl(var(--destructive-foreground-active) / <alpha-value>)',
        },
        border: 'hsl(var(--border) / <alpha-value>)',
        input: 'hsl(var(--input) / <alpha-value>)',
        ring: 'hsl(var(--ring) / <alpha-value>)',
        chart: {
          1: 'hsl(var(--chart-1) / <alpha-value>)',
          2: 'hsl(var(--chart-2) / <alpha-value>)',
          3: 'hsl(var(--chart-3) / <alpha-value>)',
          4: 'hsl(var(--chart-4) / <alpha-value>)',
          5: 'hsl(var(--chart-5) / <alpha-value>)',
        },
      },
    },
  },
  plugins: [daisyui, require('tailwindcss-animate')],
  darkMode: ['class', '[data-theme="dark"]'],
  daisyui: {
    themes: [
      {
        light: {
          primary: '#0096d6',
          'primary-content': '#d6f3ff',
          secondary: '#9933B3',
          'secondary-content': '#FFE5FF',
          accent: '#7FD8FF',
          'accent-content': '#005980',
          neutral: '#44403c',
          'neutral-content': '#e7e5e4',
          'base-100': '#f5f5f4',
          'base-200': '#d6d3d1',
          'base-300': '#a8a29e',
          'base-content': '#1c1917',
          info: '#38bdf8',
          'info-content': '#001116',
          success: '#84cc16',
          'success-content': '#000b06',
          warning: '#facc15',
          'warning-content': '#160400',
          error: '#b81e1e',
          'error-content': '#ffe4e6',
        },
      },
      {
        dark: {
          primary: '#7FD8FF',
          'primary-content': '#005980',
          secondary: '#CC66E6',
          'secondary-content': '#660080',
          accent: '#1A739A',
          'accent-content': '#E5FFFF',
          neutral: '#363230',
          'neutral-content': '#dddbd9',
          'base-100': '#292524',
          'base-200': '#44403c',
          'base-300': '#78716c',
          'base-content': '#cdcfd3',
          info: '#38bdf8',
          'info-content': '#001116',
          success: '#84cc16',
          'success-content': '#000b06',
          warning: '#facc15',
          'warning-content': '#160400',
          error: '#b81e1e',
          'error-content': '#ffe4e6',
        },
      },
    ],
  },
}

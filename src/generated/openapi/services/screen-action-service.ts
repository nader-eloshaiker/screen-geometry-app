/**
 * Generated by orval v6.17.0 🍺
 * Do not edit manually.
 * screen-geometry-app-backend-serverless-apis-v1
 * OpenAPI spec version: 1.0.0
 */
import type { MutationFunction, UseMutationOptions } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'
import { useApiAxios } from '../../../api/fetch/useApiAxios'
import type { ErrorResponse, ScreenItemRespose } from '../models'

export const useFavoriteScreenActionHook = () => {
  const favoriteScreenAction = useApiAxios<ScreenItemRespose>()

  return (id: string) => {
    return favoriteScreenAction({ url: `/screens/${id}/favorite`, method: 'patch' })
  }
}

export const useFavoriteScreenActionMutationOptions = <TError = ErrorResponse, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<ReturnType<typeof useFavoriteScreenActionHook>>>,
    TError,
    { id: string },
    TContext
  >
}): UseMutationOptions<
  Awaited<ReturnType<ReturnType<typeof useFavoriteScreenActionHook>>>,
  TError,
  { id: string },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {}

  const favoriteScreenAction = useFavoriteScreenActionHook()

  const mutationFn: MutationFunction<
    Awaited<ReturnType<ReturnType<typeof useFavoriteScreenActionHook>>>,
    { id: string }
  > = (props) => {
    const { id } = props ?? {}

    return favoriteScreenAction(id)
  }

  return { mutationFn, ...mutationOptions }
}

export type FavoriteScreenActionMutationResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof useFavoriteScreenActionHook>>>
>

export type FavoriteScreenActionMutationError = ErrorResponse

export const useFavoriteScreenAction = <TError = ErrorResponse, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<ReturnType<typeof useFavoriteScreenActionHook>>>,
    TError,
    { id: string },
    TContext
  >
}) => {
  const mutationOptions = useFavoriteScreenActionMutationOptions(options)

  return useMutation(mutationOptions)
}
